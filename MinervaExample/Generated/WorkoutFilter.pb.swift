// DO NOT EDIT.
// swift-format-ignore-file
//
// Generated by the Swift generator plugin for the protocol buffer compiler.
// Source: WorkoutFilter.proto
//
// For information on using the generated types, please see the documentation:
//   https://github.com/apple/swift-protobuf/

import Foundation
import SwiftProtobuf

// If the compiler emits an error on this type, it is because this file
// was generated by a version of the `protoc` Swift plug-in that is
// incompatible with the version of SwiftProtobuf to which you are linking.
// Please ensure that you are building against the same version of the API
// that was used to generate this file.
private struct _GeneratedWithProtocGenSwiftVersion: SwiftProtobuf.ProtobufAPIVersionCheck {
  struct _2: SwiftProtobuf.ProtobufAPIVersion_2 {}
  typealias Version = _2
}

public struct WorkoutFilterProto {
  // SwiftProtobuf.Message conformance is added in an extension below. See the
  // `Message` and `Message+*Additions` files in the SwiftProtobuf library for
  // methods supported on all messages.

  public var startDateTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp {
    get { _startDateTimestamp ?? SwiftProtobuf.Google_Protobuf_Timestamp() }
    set { _startDateTimestamp = newValue }
  }
  /// Returns true if `startDateTimestamp` has been explicitly set.
  public var hasStartDateTimestamp: Bool { self._startDateTimestamp != nil }
  /// Clears the value of `startDateTimestamp`. Subsequent reads from it will return its default value.
  public mutating func clearStartDateTimestamp() { self._startDateTimestamp = nil }

  public var endDateTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp {
    get { _endDateTimestamp ?? SwiftProtobuf.Google_Protobuf_Timestamp() }
    set { _endDateTimestamp = newValue }
  }
  /// Returns true if `endDateTimestamp` has been explicitly set.
  public var hasEndDateTimestamp: Bool { self._endDateTimestamp != nil }
  /// Clears the value of `endDateTimestamp`. Subsequent reads from it will return its default value.
  public mutating func clearEndDateTimestamp() { self._endDateTimestamp = nil }

  public var startTimeTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp {
    get { _startTimeTimestamp ?? SwiftProtobuf.Google_Protobuf_Timestamp() }
    set { _startTimeTimestamp = newValue }
  }
  /// Returns true if `startTimeTimestamp` has been explicitly set.
  public var hasStartTimeTimestamp: Bool { self._startTimeTimestamp != nil }
  /// Clears the value of `startTimeTimestamp`. Subsequent reads from it will return its default value.
  public mutating func clearStartTimeTimestamp() { self._startTimeTimestamp = nil }

  public var endTimeTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp {
    get { _endTimeTimestamp ?? SwiftProtobuf.Google_Protobuf_Timestamp() }
    set { _endTimeTimestamp = newValue }
  }
  /// Returns true if `endTimeTimestamp` has been explicitly set.
  public var hasEndTimeTimestamp: Bool { self._endTimeTimestamp != nil }
  /// Clears the value of `endTimeTimestamp`. Subsequent reads from it will return its default value.
  public mutating func clearEndTimeTimestamp() { self._endTimeTimestamp = nil }

  public var unknownFields = SwiftProtobuf.UnknownStorage()

  public enum FilterType: SwiftProtobuf.Enum {
    public typealias RawValue = Int
    case startDate // = 1
    case endDate // = 2
    case startTime // = 3
    case endTime // = 4

    public init() {
      self = .startDate
    }

    public init?(rawValue: Int) {
      switch rawValue {
      case 1: self = .startDate
      case 2: self = .endDate
      case 3: self = .startTime
      case 4: self = .endTime
      default: return nil
      }
    }

    public var rawValue: Int {
      switch self {
      case .startDate: return 1
      case .endDate: return 2
      case .startTime: return 3
      case .endTime: return 4
      }
    }

  }

  public init() {}

  fileprivate var _startDateTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp?
  fileprivate var _endDateTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp?
  fileprivate var _startTimeTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp?
  fileprivate var _endTimeTimestamp: SwiftProtobuf.Google_Protobuf_Timestamp?
}

#if swift(>=4.2)

extension WorkoutFilterProto.FilterType: CaseIterable {
  // Support synthesized by the compiler.
}

#endif  // swift(>=4.2)

// MARK: - Code below here is support for the SwiftProtobuf runtime.

extension WorkoutFilterProto: SwiftProtobuf.Message, SwiftProtobuf._MessageImplementationBase, SwiftProtobuf._ProtoNameProviding {
  public static let protoMessageName: String = "WorkoutFilterProto"
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "startDateTimestamp"),
    2: .same(proto: "endDateTimestamp"),
    3: .same(proto: "startTimeTimestamp"),
    4: .same(proto: "endTimeTimestamp"),
  ]

  public mutating func decodeMessage<D: SwiftProtobuf.Decoder>(decoder: inout D) throws {
    while let fieldNumber = try decoder.nextFieldNumber() {
      // The use of inline closures is to circumvent an issue where the compiler
      // allocates stack space for every case branch when no optimizations are
      // enabled. https://github.com/apple/swift-protobuf/issues/1034
      switch fieldNumber {
      case 1: try { try decoder.decodeSingularMessageField(value: &self._startDateTimestamp) }()
      case 2: try { try decoder.decodeSingularMessageField(value: &self._endDateTimestamp) }()
      case 3: try { try decoder.decodeSingularMessageField(value: &self._startTimeTimestamp) }()
      case 4: try { try decoder.decodeSingularMessageField(value: &self._endTimeTimestamp) }()
      default: break
      }
    }
  }

  public func traverse<V: SwiftProtobuf.Visitor>(visitor: inout V) throws {
    if let v = self._startDateTimestamp {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 1)
    }
    if let v = self._endDateTimestamp {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 2)
    }
    if let v = self._startTimeTimestamp {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 3)
    }
    if let v = self._endTimeTimestamp {
      try visitor.visitSingularMessageField(value: v, fieldNumber: 4)
    }
    try unknownFields.traverse(visitor: &visitor)
  }

  public static func ==(lhs: WorkoutFilterProto, rhs: WorkoutFilterProto) -> Bool {
    if lhs._startDateTimestamp != rhs._startDateTimestamp { return false }
    if lhs._endDateTimestamp != rhs._endDateTimestamp { return false }
    if lhs._startTimeTimestamp != rhs._startTimeTimestamp { return false }
    if lhs._endTimeTimestamp != rhs._endTimeTimestamp { return false }
    if lhs.unknownFields != rhs.unknownFields { return false }
    return true
  }
}

extension WorkoutFilterProto.FilterType: SwiftProtobuf._ProtoNameProviding {
  public static let _protobuf_nameMap: SwiftProtobuf._NameMap = [
    1: .same(proto: "startDate"),
    2: .same(proto: "endDate"),
    3: .same(proto: "startTime"),
    4: .same(proto: "endTime"),
  ]
}
